image:
   name: gcr.io/rich-atom-211704/scala-sbt:scala-2.12-3
   username: _json_key
   password: '$GCR_JSON_KEY'

pipelines:
  default:
    - step:
        name: Unit Testing
        caches:
          - sbt
          - ivy2
        script:
          - sbt unit

    - step:
        name: Integration Testing
        caches:
          - sbt
          - ivy2
        script:
          - ./scripts/wait_for.sh $MONGODB_HOST $MONGODB_PORT
          - sbt coverage unit integration
          - sbt coverageReport
        services:
          - mongo

    - step:
        name: Functional Testing
        caches:
          - sbt
          - ivy2
        script:
          - sbt dist
          - unzip target/universal/device_log_ingestion_service-1.0.zip -d .
          - device_log_ingestion_service-1.0/bin/device_log_ingestion_service -Dhttp.port=$IO_LOG_INGESTION_MANAGER_PORT -Dconfig.file=device_log_ingestion_service-1.0/conf/application-functional.conf &
          - ./scripts/wait_for.sh $IO_LOG_INGESTION_MANAGER_HOST $IO_LOG_INGESTION_MANAGER_PORT
          - env JAVA_OPTS="-Dconfig.resource=application-functional.conf" sbt cucumber
        artifacts:
          - device_log_ingestion_service-1.0/**
        services:
          - mongo
    - step:
        name: Publish Artifact
        script:
          - CONTAINER_TAG="gcr.io/$GC_PROJECT_NAME/device_log_ingestion_service-1.0:$BITBUCKET_COMMIT"
          - mv device_log_ingestion_service-1.0 containers/artifact/
          - cd containers/artifact/
          - docker build -t $CONTAINER_TAG .
          - echo $GCR_JSON_KEY > gcr-credential.json
          - gcloud auth activate-service-account --key-file gcr-credential.json
          - gcloud auth configure-docker --quiet
          - docker push $CONTAINER_TAG

options:
  docker: true

definitions:
  services:
    mongo:
      image: mongo:3.6
